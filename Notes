React JS

Large scale frontend app

VSCode use Emmet

Html:5 

Hello world using HTML , JS and , using CDN React

What is CDN?

What is cross origin ?

Open the CDN link and see its at the end of the day is JS

Go to console and write React

Two diff CDN links since react Dom can be plugged only for browser
Main file is react.development.js

There is react native which works on mobile

Which ever we need we can plug apart from react development js

Type ReactDOM as well in console

Write code for hello world React

Put all your code in App.js file

In browser the most expensive operation is DOM manipulation

Why root element in react?

React and other framework are ultimately optimising DOM manipulation

Use attributes in createElement 

Add a css file and make the h1 as red

<link rel=“stylesheet” href=“./index.css”>

Print using console.log(reactElement) you will see it is a react element

When we call render then only react will inject the element in the DOM


Parent , child , h1 tag using react

console.log(parent)

ReactElement (Object) => HTML (browser understands)

Multiple siblings add more children

Make two divs under child

JSX exists

Order of the files matter in JS as it is an interpreted language
 
Why script tag is present in body and not head


Difference between production and dev CDN links?

Static content is being replaced  not appended

Refresh your page fast
 
Define header and footer and see as static if react will replace it or not

React is a library not a framework it can work only at a portion of a webpage


Ignition our add

npm init

Complete all the steps

package.json is a configuration for npm , it keeps a note of all the dependency we use

We need bundler  to bundle the file and minify it 

npm install -D parcel

-D means dev

Two types of dependency we can install

Dev dependency - it means it is required in the dev phase

Normal - it is required in the production phase as well

"parcel": "^2.12.0" in npm package.json

^ it means it will automatically install minor version

~ means it will install the major version automatically

A safe thing is to use ^ and not ~

package-lock.json will keep  a record of exact version of the dependency that is installed 

   "integrity": "sha512-dPNe2n9eEsKRc1soWIY0yToMUPirPIa2QhxcCB3Z5RjpDGIXm0pds+BaiqY6uGLEEzsjhRO0ujd4v2Rmm0vuFg==",
   
The integrity ensures that what is installed in my local the same version is being used in prod to avoid it works in my local but not in prod

Transitive dependency

parcel is dependenat on many other dependncy which is dependant on others 

node_modules has the code of the all the trasnsitive depency

Every module in node_module will have its own package.json

If you have package and package-lock.json i can generate the node_modules

using npm install

https://www.npmjs.com/


npx parcel index.html 


npm is for installing  a package

For executing package

npx [packageName]

CDN links is not a preffered way to get react better to keep it in node_modules as it is also a js lib

npm install react

npm install react-dom

Speak about all the features of the parcel in system design interviews

dist folder was having development code

npx parcel build index.html

https://browserslist.dev/?q=bGFzdCAyIHZlcnNpb25z

"browserslist":[
    "last 2 Chrome version",
    "last 2 firefox version"
  ]

https://github.com/browserslist/browserslist#query-composition
cover 99.5% in US

-------
use scripts in package.json

scripts
"start": "parcel index.html"
"build": "parcel build index.html"


we can start using 

npm run start
npm run build

for start as it is reserved we can use npm start



The root.render will replace the existing html 

If there is a bug a better way is to keep it Not Rendered by default 


JSX is not HTML in JS

JSX is HTML like or XML like syntax .


JSX element and React Element both are same if we do console.log


JSX code is transpiled before it reaches the JS engine 

- means it is converted to a code that react / browser can understand - PARCEL - Babel

JSX is converting it to React.createElement which is furthur converted to HTMLElement which is rendered into DOM.

Use babel js website to see it

Above is done by Babel 

Use () for multiline JSX

Extensions used

Prettier code format extenstion

Bracket Pair colorization

ESLint

Better comments

Git lens

//React components

Two ways of creating component

//Class based components OLD

//Functional components NEW

React functional component

a react component should be with a capital letter

const HeadingComponent =()=>{
   
};



A React element can be converted to a component easliy with () and => and  by changing the variable name to Capital letter

React composition is nothing but using a component inside another

{} placed under a react functional component can execute any JavaScript inside it


We can place the React Element inside a component using the {}

Infinite loop if one requires another

JSX will escape any CORS attack and sanitize the data which is passed in {} before running

It is safe to use it if any api call response is being passed as {}

data=apiCall.getResult();

In a componenent if we are using {}
{data}

















